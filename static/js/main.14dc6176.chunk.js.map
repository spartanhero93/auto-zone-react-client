{"version":3,"sources":["store/reducer.js","store/index.js","components/Button.js","components/ItemDetails.js","App.js","index.js"],"names":["initialState","products","productsSlice","createSlice","name","reducers","loadAllProducts","state","addProduct","action","itemInfo","partNo","payload","partNumber","price","pricing","list","console","log","actions","store","configureStore","reducer","Button","styled","button","ItemDetails","item","ItemDetailsStyled","productDescription","div","Container","Wrapper","Item","App","dispatch","useDispatch","useEffect","Products","map","i","src","image","alt","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAGMA,EAAe,CACnBC,YAOWC,EAAgBC,YAAY,CACvCC,KAAM,WACNJ,eACAK,SAAU,CACRC,gBAAiB,SAAAC,GAAK,OAAIA,GAC1BC,WAAY,SAACD,EAAOE,GAClB,IAAMC,EAAW,CACfC,OAAO,IAAD,OAAMF,EAAOG,QAAQC,YAC3BC,MAAOL,EAAOG,QAAQG,QAAQC,MAEhCC,QAAQC,IAAIR,OAKX,EAAsCR,EAAciB,QAA7Cb,EAAP,EAAOA,gBAAiBE,EAAxB,EAAwBA,WCnBhBY,GDqBAlB,EAAf,QCzBcmB,YAAe,CAC3BC,QAASpB,K,4BCkBIqB,EApBAC,IAAOC,OAAV,iV,OCAG,SAASC,EAAT,GAA+B,IAARC,EAAO,EAAPA,KACpC,OACE,eAACC,EAAD,WACE,4BAAID,EAAKE,qBACT,2CACU,kCAAKF,EAAKd,iBAEpB,+BACE,4BAAIc,EAAKZ,QAAQC,YAMzB,I,MAAMY,EAAoBJ,IAAOM,IAAV,qjBCuBvB,IAAMC,EAAYP,IAAOM,IAAV,yEAKTE,EAAUR,IAAOM,IAAV,qPAYPG,EAAOT,IAAOM,IAAV,2NAeKI,EA9Df,WACE,IAAMC,EAAWC,cASjB,OAJAC,qBAAU,WACRF,EAAS7B,MAIT,cAACyB,EAAD,UACGO,EAASC,KAAI,SAAAC,GAAC,OACb,eAACR,EAAD,WACE,eAACC,EAAD,WACE,qBAAKQ,IAAKD,EAAEE,MAAOC,IAAKH,EAAEX,qBAC1B,cAACH,EAAD,CAAaC,KAAMa,OAGrB,cAAC,EAAD,CAAQI,QAAS,kBAAMT,EAAS3B,EAAWgC,KAA3C,2BANYA,EAAE3B,kBCXxBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3B,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ4B,SAASC,eAAe,U","file":"static/js/main.14dc6176.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport products from '../products.json'\r\n\r\nconst initialState = {\r\n  products,\r\n}\r\n\r\n/**\r\n * @description: creates a slice of one particular data set, in this case products,\r\n * all reducers are associated with the products slice\r\n */\r\nexport const productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {\r\n    loadAllProducts: state => state,\r\n    addProduct: (state, action) => {\r\n      const itemInfo = {\r\n        partNo: `#${action.payload.partNumber}`,\r\n        price: action.payload.pricing.list\r\n      }\r\n      console.log(itemInfo)\r\n    },\r\n  }\r\n})\r\n\r\nexport const {loadAllProducts, addProduct} = productsSlice.actions\r\n\r\nexport default productsSlice.reducer","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { productsSlice } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: productsSlice\r\n});\r\n\r\nexport default store;\r\n","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\ncolor: antiquewhite;\r\nbackground-color: #c03;\r\nborder: none;\r\nalign-self: flex-end;\r\npadding: 0.5rem 2.5rem;\r\nwidth: 150px;\r\nwhite-space: nowrap;\r\nfont-size: 16px;\r\nposition: relative;\r\nbottom: 40px;\r\n\r\n@media only screen and (max-width: 600px) {\r\n  align-self: center;\r\n  width: 95%;\r\n  bottom: 10px;\r\n \r\n}\r\n`\r\n\r\nexport default Button","import styled from 'styled-components'\r\n\r\nexport default function ItemDetails ({item}) {\r\n  return (\r\n    <ItemDetailsStyled>\r\n      <b>{item.productDescription}</b>\r\n      <div>\r\n        PartNo: <b>#{item.partNumber}</b>\r\n      </div>\r\n      <span>\r\n        <b>{item.pricing.list}</b>\r\n      </span>\r\n    </ItemDetailsStyled>\r\n  )\r\n}\r\n\r\nconst ItemDetailsStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 1rem;\r\n  font-size: 18px;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  div {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  span {\r\n    width: 50px;\r\n    position: relative;\r\n    top: 25px;\r\n    left: 300px;\r\n    color: #c03;\r\n\r\n    @media only screen and (max-width: 600px) {\r\n      font-size: 16px;\r\n      position: relative;\r\n      top: -20px;\r\n      left: 180px;\r\n    }\r\n    @media only screen and (max-width: 400px) {\r\n      left: 140px;\r\n    }\r\n  }\r\n`\r\n\r\n\r\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport Products from './products.json'\nimport { addProduct, loadAllProducts } from './store/reducer'\nimport Button from './components/Button'\nimport ItemDetails from './components/ItemDetails'\n\n\nfunction App () {\n  const dispatch = useDispatch()\n\n  /**\n   * @description: on mount dispatch an action that takes in all the products\n   */\n  useEffect(() => {\n    dispatch(loadAllProducts)\n  })\n\n  return (\n    <Container>\n      {Products.map(i => (\n        <Wrapper key={i.partNumber}>\n          <Item>\n            <img src={i.image} alt={i.productDescription} />\n            <ItemDetails item={i} />\n          </Item>\n\n          <Button onClick={() => dispatch(addProduct(i))}>Add to Cart</Button>\n        </Wrapper>\n      ))}\n    </Container>\n  )\n}\n\n/**\n * @description: These are the styles for the main container and items wrapper\n */\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  border-bottom: 1px solid gray;\n  flex-direction: column;\n  padding: 1rem 1rem 0 ;\n  \n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n    padding-bottom: 15px;\n  }\n`\n\nconst Item = styled.div`\n  display: flex;\n\n  img {\n    margin: 1rem;\n    height: 125px;\n    width: 125px;\n\n    @media only screen and (max-width: 600px) {\n      height: 75px;\n      width: 75px;\n    }\n  }\n`\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}